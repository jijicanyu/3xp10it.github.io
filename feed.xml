<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>quanyechavshuo</title>
    <description>A blog about programming and network security</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Aug 2016 16:46:33 +0800</pubDate>
    <lastBuildDate>Wed, 03 Aug 2016 16:46:33 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>构造自己的python模块</title>
        <description>&lt;h3 id=&quot;x00-about&quot;&gt;0x00 about&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;目的:便于关键常用代码的可重用性
用法:from exp10it import *
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x01-api&quot;&gt;0x01 api&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-module&quot;&gt;0x02 module&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# -*- coding: utf-8 -*-
import sys
reload(sys)
sys.setdefaultencoding(&#39;utf-8&#39;)
#必须加上上面四行,否则各种编码的错误爆出

import os
import re
import random

def figlet2file(logo_str,file_abs_path,print_or_not):
    #输出随机的logo文字到文件或屏幕,第二个参数为任意非文件的参数时(eg.0,1,2),只输出到屏幕

    #apt-get install figlet
    #man figlet
    #figure out which is the figlet&#39;s font directory
    #my figlet font directory is:
    #figlet -I 2,output:/usr/share/figlet

    f=os.popen(&quot;figlet -I 2&quot;)
    all=f.readlines()
    f.close()
    figlet_font_dir=all[0][:-1]

    all_font_name_list=get_all_file_name(figlet_font_dir,[&#39;tlf&#39;,&#39;flf&#39;])

    random_font=random.choice(all_font_name_list)
    unsucceed=os.system(&quot;figlet -t -f %s %s &amp;gt; /tmp/1&quot; % (random_font,logo_str))
    if(unsucceed==1):
        os.system(&quot;sudo apt-get install figlet&quot;)
        unsucceed=os.system(&quot;figlet -t -f %s &amp;gt; /tmp/1&quot; % random_font)
        if(unsucceed==1):
            print &quot;something wrong with figlet,check the command in python source file&quot;
    try:
        f=open(&quot;/tmp/1&quot;,&quot;r+&quot;)
        all=f.readlines()
        f.close()
        f=open(file_abs_path,&quot;a+&quot;)
        for each in all:
            f.write(&quot;### &quot;+each)
        f.close()
    except:
        pass
    if(print_or_not==True):
        os.system(&quot;cat /tmp/1&quot;)
    os.system(&quot;rm /tmp/1&quot;)

def oneline2nline(oneline,nline,file_abs_path):
    #将文件中的一行字符串用多行字符串替换,调用时要将&quot;多行字符串的参数(第二个参数)&quot;中的换行符设置为\n
    tmpstr=nline.replace(&#39;\n&#39;,&#39;\\\n&#39;)
    os.system(&quot;sed &#39;/%s/c\\\n%s&#39; %s &amp;gt; /tmp/1&quot; % (oneline,tmpstr,file_abs_path))
    os.system(&quot;cat /tmp/1 &amp;gt; %s &amp;amp;&amp;amp; rm /tmp/1&quot; % file_abs_path)
    pass

def lin2win(file_abs_path):
    #将linux下的文件中的\n换行符换成win下的\n\n换行符
    import sys
    input_file=file_abs_path
    f=open(input_file,&quot;r+&quot;)
    urls=f.readlines()
    f.close()
    os.system(&quot;rm %s&quot; % file_abs_path)
    f1=open(file_abs_path,&quot;a+&quot;)
    for url in urls:
    	print url[0:-1]
    	#print url is different with print url[0:-1]
    	#print url[0:-1] can get the pure string
    	#while print url will get the &quot;unseen \n&quot;
    	#this script can turn a file with strings
    	#end with \n into a file with strings end
    	#with \r\n to make it comfortable move the
    	#txt file from *nix to win,coz the file with
    	#strings end with \n in *nix is ok for human
    	#to see &quot;different lines&quot;,but this kind of file
    	#will turn &quot;unsee different lines&quot; in win
    	f1.write(url[0:-1]+&quot;\r\n&quot;)
    f1.close()


#attention:
#由于此处tmp和all_file_name_list在函数外面,so
#在其他代码中调用get_all_file_name()时要用from name import *,不用import name,否则不能调用到get_all_file_name的功能
tmp=0
all_file_name_list=[]
def get_all_file_name(folder,ext_list):
    global tmp
    global root_dir
    global all_file_name_list
    tmp+=1
    if tmp==1:
        if folder[-1]==&#39;/&#39;:
            root_dir=folder[:-1]
        else:
            root_dir=folder

    allfile=os.listdir(folder)
    for each in allfile:
        each_abspath=os.path.join(folder,each)
        if os.path.isdir(each_abspath):
            get_all_file_name(each_abspath,ext)
        else:
            #print each_abspath
            if len(each_abspath)&amp;gt;len(root_dir)+1+len(os.path.basename(each)):
                filename=each_abspath[len(root_dir)+1:]
                #print filename
                all_file_name_list.append(filename,ext_list)
            else:
                #print each
                for each_ext in ext_list:
                    if(each.split(&#39;.&#39;)[1]==each_ext):
                        all_file_name_list.append(each)

    return all_file_name_list


def save2github(file_abs_path,repo_name,comment):
    #将文件上传到github
    #arg1:file
    #arg2:远程仓库名
    #提交的commit注释
    local_resp_path=&quot;/root/&quot;+repo_name
    remote_resp_uri=&quot;https://github.com/3xp10it/%s.git&quot; % repo_name
    if os.path.exists(local_resp_path) is False:
        os.system(&quot;mkdir %s &amp;amp;&amp;amp; cd %s &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git pull %s &amp;amp;&amp;amp; git remote add origin %s &amp;amp;&amp;amp; git status&quot; % (local_resp_path,local_resp_path,remote_resp_uri,remote_resp_uri))
    os.system(&quot;cp %s %s&quot; % (file_abs_path,local_resp_path))
    succeed=os.system(&quot;cd %s &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &#39;%s&#39; &amp;amp;&amp;amp; git push -u origin master&quot; % (local_resp_path,comment))
    if(succeed==0):
        print &quot;push succeed!!!&quot;
    else:
        print &quot;push to git wrong,wrong,wrong,check it!!!&quot;
    return succeed

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x03-&quot;&gt;0x03 模块发布&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;pypi register
2&amp;gt;eg.
mkdir /root/mypypi
cd /root/mypypi
python setup.py register
vi exp10it.py
vi setup.py
--------------setup.py-------------
from distutils.core import setup
setup(
    name=&#39;exp10it&#39;,
    version=&#39;1.0.11&#39;,
    packages=[&#39;&#39;],
    url=&#39;https://3xp10it.github.io&#39;,
    license=&#39;&#39;,
    author=&#39;quanyechavshuo&#39;,
    author_email=&#39;quanyechavshuo@gmail.com&#39;,
    description=&#39;My pipy module&#39;
)
----------------end----------------
python setup.py sdist upload

update时只需：
cd /root/mypypi
vi exp10it.py
vi setup.py
    set version to a higher one
python setup.py sdist upload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 00:00:00 +0800</pubDate>
        <link>/python/2016/08/03/%E6%9E%84%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84python%E6%A8%A1%E5%9D%97/</link>
        <guid isPermaLink="true">/python/2016/08/03/%E6%9E%84%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84python%E6%A8%A1%E5%9D%97/</guid>
        
        <category>script</category>
        
        <category>python</category>
        
        <category>module</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>便捷写python脚本</title>
        <description>&lt;h3 id=&quot;x00-about&quot;&gt;0x00 about&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;目的:方便快速写python脚本
相关:在脚本中打印logo及部分常用代码
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x01-code&quot;&gt;0x01 code&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---------------newpy.py------------------
# -*- coding: utf-8 -*-
import sys
reload(sys)
sys.setdefaultencoding(&#39;utf-8&#39;)
#必须加上上面四行,否则各种编码的错误爆出
from exp10it import *
import os
import datetime
import time
while 1:
    print &quot;please input the script name:)&quot;
    filename=raw_input()
    if os.path.exists(&quot;/root/script&quot;) is False:
        os.system(&quot;mkdir /root/script&quot;)
    file_abs_path=&quot;/root/script/&quot;+filename
    if os.path.exists(file_abs_path):
        print &quot;file name exists,u need to change the file name,or if you really want the name,it will replace the original file!!!&quot;
        print &quot;replace the original file? y/n[N]:&amp;gt;&quot;,
        choose=raw_input()
        if(choose!=&#39;y&#39; and choose!=&#39;Y&#39;):
            continue
        else:
            os.system(&quot;rm %s&quot; % file_abs_path)
    print &quot;please input the script function:)&quot;
    function=raw_input()
    date=datetime.date.today()
    author=&quot;quanyechavshuo&quot;
    blog=&quot;https://3xp10it.github.io&quot;
    break


f=open(file_abs_path,&quot;a+&quot;)
f.write(&quot;#############################################################\n&quot;)
f.close()
figlet2file(&quot;3xp10it&quot;,file_abs_path,True)
time.sleep(1)


f=open(file_abs_path,&quot;a+&quot;)
all=f.readlines()
f.close()
f=open(&quot;/tmp/1&quot;,&quot;a+&quot;)
for each in all:
    if(len(each)&amp;lt;61):
        each=each[:-1]+(58-sys.getsizeof(each[:-1]))*&#39; &#39;+&#39;   &#39;
        f.write(each+&#39;\n&#39;)
    else:
        f.write(each)
f.close()
os.system(&quot;rm %s&quot; % file_abs_path)
f=open(&quot;/tmp/1&quot;,&quot;a+&quot;)
all=f.readlines()
f.close()
os.system(&quot;rm /tmp/1&quot;)
f=open(file_abs_path,&quot;a+&quot;)
for each in all:
    f.write(each)
f.close()


f=open(file_abs_path,&quot;a+&quot;)
f.write(&quot;###                                                          \n&quot;)
f.write(&quot;### name: %s&quot; % filename+(42-len(filename)+6)*&#39; &#39;+&#39;   \n&#39;)
f.write(&quot;### function: %s&quot; % function+(38-len(function)+6)*&#39; &#39;+&#39;   \n&#39;)
f.write(&quot;### date: %s&quot; % str(date)+(42-len(str(date))+6)*&#39; &#39;+&#39;   \n&#39;)
f.write(&quot;### author: %s&quot; % author+(40-len(author)+6)*&#39; &#39;+&#39;   \n&#39;)
f.write(&quot;### blog: %s&quot; % blog+(42-len(blog)+6)*&#39; &#39;+&#39;   \n&#39;)
f.write(&quot;#############################################################\n&quot;)
f.write(&#39;&#39;&#39;# -*- coding: utf-8 -*-\nimport sys\nreload(sys)\nsys.setdefaultencoding(&#39;utf-8&#39;)\n#upon 4 lines for chinese support\nimport time\nfrom exp10it import *\nfiglet2file(&quot;3xp10it&quot;,2,True)\ntime.sleep(1)\n\n&#39;&#39;&#39;)
f.close()
os.system(&quot;vim %s&quot; % file_abs_path)

print &quot;do you want this script upload to github server? Y/n[Y]:&quot;
choose=raw_input()
if choose!=&#39;n&#39;:
    print &quot;please input your remote repository name:)&quot;
    repo_name=raw_input()
    succeed=save2github(file_abs_path,repo_name,function)
    if(succeed==0):
        print &quot;all is done and all is well!!!&quot;

----------------end----------------------
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-attention&quot;&gt;0x02 attention&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;sys.getsizeof(str):得到str的字节数

2&amp;gt;由于figlet打印出的logo的字符中有非ascii码,用sys.getsizeof()得到字节大小,但是非ascii在终端显示时,即使是相同的字节数的字符串,在终端的显示的&quot;占位长度&quot;不同

3&amp;gt;代码中的from exp10it import *中的exp10it为自己的模块

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 03 Aug 2016 00:00:00 +0800</pubDate>
        <link>/python/2016/08/03/%E4%BE%BF%E6%8D%B7%E5%86%99python%E8%84%9A%E6%9C%AC/</link>
        <guid isPermaLink="true">/python/2016/08/03/%E4%BE%BF%E6%8D%B7%E5%86%99python%E8%84%9A%E6%9C%AC/</guid>
        
        <category>script</category>
        
        <category>python</category>
        
        <category>logo</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Aug 2016 12:27:49 +0800</pubDate>
        <link>/jekyll/update/2016/08/02/welcome-to-jekyll/</link>
        <guid isPermaLink="true">/jekyll/update/2016/08/02/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>修复linux系统</title>
        <description>&lt;h3 id=&quot;x00-good-knowledge&quot;&gt;0x00 good knowledge:&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://www.xitongzhijia.net/xtjc/20141208/32106.html
http://www.linuxidc.com/Linux/2015-05/117031.htm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x01-etcfstab-wrong&quot;&gt;0x01 /etc/fstab wrong&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;安装linux系统到u盘
eg.ubuntu: use yumi
eg.kali linux2: use win32diskimager

2&amp;gt;start os from usb
fdisk -l
    output:/dev/sda1 is the boot linux location
    设备       启动     Start    末尾    扇区   Size Id 类型
    /dev/sda1  *         2048  39178239  39176192  18.7G 83 Linux
    /dev/sda2        39180286 488396799 449216514 214.2G  5 扩展
    /dev/sda5        39180288 101679103  62498816  29.8G 82 Linux 交换 / Solaris
    /dev/sda6       101681152 488396799 386715648 184.4G 83 Linux
    
    Disk /dev/sdb: 1.8 TiB, 2000398934016 bytes, 3907029168 sectors
    Units: sectors of 1 * 512 = 512 bytes
    Sector size (logical/physical): 512 bytes / 4096 bytes
    I/O size (minimum/optimal): 4096 bytes / 4096 bytes
    Disklabel type: dos
    Disk identifier: 0x0585b847

    设备       启动 Start     末尾     扇区  Size Id 类型
    /dev/sdb1        2048 3907028991 3907026944  1.8T  5 扩展
    /dev/sdb5        4096 3907028991 3907024896  1.8T 83 Linux

mkdir /mnt/tmp
mkdir /mnt/tmp/boot
mount /dev/sda6 /mnt/tmp
mount /dev/sda1 /mnt/tmp/boot
mount --bind /dev /mnt/tmp/dev
mount --bind /proc /mnt/tmp/proc
mount --bind /sys /mnt/tmp/sys
chroot /mnt/tmp

vi /etc/fstab
    # /etc/fstab: static file system information.
    #
    # Use &#39;blkid&#39; to print the universally unique identifier for a
    # device; this may be used with UUID= as a more robust way to name devices
    # that works even if disks are added and removed. See fstab(5).
    #
    # &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt;   &amp;lt;type&amp;gt;  &amp;lt;options&amp;gt;       &amp;lt;dump&amp;gt;  &amp;lt;pass&amp;gt;
    # / was on /dev/sda6 during installation
    UUID=404e86ae-84e2-4e70-8317-f6731637b4b1 /               ext4    errors=remount-ro 0       1
    # /boot was on /dev/sda1 during installation
    UUID=ff639af0-1f08-4fb3-9dc1-734fea98cdfc /boot           ext4    defaults        0       2
    # swap was on /dev/sda5 during installation
    UUID=662e8f85-fea5-4e66-939a-de769a05c326 none            swap    sw              0       0

modify as this:

UUID=404e86ae-84e2-4e70-8317-f6731637b4b1 /
to
/dev/sda6 /

UUID=ff639af0-1f08-4fb3-9dc1-734fea98cdfc /boot
to
/dev/sda1 /boot

UUID=662e8f85-fea5-4e66-939a-de769a05c326 none
to
/dev/sda5

exit
umount /mnt/tmp/dev &amp;amp;&amp;amp; umout /mnt/tmp/proc &amp;amp;&amp;amp; umount /mnt/tmp/sys &amp;amp;&amp;amp; umount /mnt/tmp/boot &amp;amp;&amp;amp;  umount /mnt/tmp
shutdown -r 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-boot-wrong&quot;&gt;0x02 boot wrong&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;start os from usb with linux system
2&amp;gt;fdisk -l
    output is the same as upon fdisk -l
3&amp;gt;mkdir /mnt/tmp
4&amp;gt;mkdir /mnt/tmp/boot
5&amp;gt;mount /dev/sda6 /mnt/tmp
6&amp;gt;mount /dev/sda1 /mnt/tmp/boot
7&amp;gt;mount --bind /dev /mnt/tmp/dev
8&amp;gt;mount --bind /proc /mnt/tmp/proc
9&amp;gt;mount --bind /sys /mnt/tmp/sys
10&amp;gt;chroot /mnt/tmp
11&amp;gt;grub-install /dev/sda1
    if /dev/sda1 is the boot location
12&amp;gt;grub-mkconfig -o /boot/grub2/grub.cfg
13&amp;gt;exit
14&amp;gt;umount /mnt/tmp/dev &amp;amp;&amp;amp; umout /mnt/tmp/proc &amp;amp;&amp;amp; umount /mnt/tmp/sys &amp;amp;&amp;amp; umount /mnt/tmp/boot &amp;amp;&amp;amp;  umount /mnt/tmp
15&amp;gt;shutdow -r 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x03-system-backup-automatically&quot;&gt;0x03 system backup automatically&lt;/h3&gt;

&lt;p&gt;1&amp;gt;condition
first mount another disk(for bakup store) to /media/root/files&lt;/p&gt;

&lt;p&gt;2&amp;gt;ubuntubak.sh&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if [ -d /media/root/files ] &amp;amp;&amp;amp; [ ! -d /media/root/files/ubuntubak ]
then
    mkdir /media/root/files/ubuntubak
    tar /media/root/files/ubuntubak/ubuntubak.tgz cvpzf ubuntubak.tgz --exclude=/proc --exclude=/lost+found --exclude=/ubuntubak.tgz --exclude=/mnt --exclude=/sys --exclude=/root/.cache /
else
    echo &quot;bak folder not exist,the bakup device is not ready,check it.&quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3&amp;gt;alias&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp ubuntubak.sh /usr/share
vi .zshrc
+alias ubuntubak=&quot;bash /usr/share/ubuntubak.sh&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 00:00:00 +0800</pubDate>
        <link>/auxilary/2016/08/02/%E4%BF%AE%E5%A4%8Dlinux%E7%B3%BB%E7%BB%9F/</link>
        <guid isPermaLink="true">/auxilary/2016/08/02/%E4%BF%AE%E5%A4%8Dlinux%E7%B3%BB%E7%BB%9F/</guid>
        
        <category>linux</category>
        
        <category>修复系统</category>
        
        
        <category>auxilary</category>
        
      </item>
    
      <item>
        <title>便捷写博客脚本</title>
        <description>&lt;h3 id=&quot;x00-&quot;&gt;0x00 方便写博客并浏览脚本&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---------------blog.py------------------
# -*- coding: utf-8 -*-
import sys
reload(sys)
sys.setdefaultencoding(&#39;utf-8&#39;)
#必须加上上面四行,否则各种编码的错误爆出

import os
import datetime

date=datetime.date.today()
print &quot;please input blog article title:)&quot;
title=raw_input()
print &quot;please input blog categories:)&quot;
categories=raw_input()
print &quot;please input blog tags,use space to separate:)&quot;
tags=raw_input()
tags_list=tags.split(&#39; &#39;)
tags_write_to_file=&quot;&quot;
for each in tags_list:
    tags_write_to_file+=(&#39; - &#39;+each+&#39;\\\n&#39;)
tags_write_to_file=tags_write_to_file[:-2]



article_title=title
title1=title.replace(&#39; &#39;,&#39;-&#39;)
filename=str(date)+&#39;-&#39;+title1+&#39;.md&#39;

file_abs_path=&quot;/root/myblog/_posts/&quot;+filename
os.system(&quot;cp /root/myblog/_posts/*webshell* %s&quot; % file_abs_path)
os.system(&quot;sed -i &#39;s/^title.*/title:      %s/g&#39; %s&quot; % (title,file_abs_path))
os.system(&quot;sed -i &#39;s/date:       .*/date:       %s/g&#39; %s&quot; % (str(date),file_abs_path))
os.system(&quot;sed -i &#39;s/summary:    隐藏webshell的几条建议/summary:    %s/g&#39; %s&quot; % (title,file_abs_path))
os.system(&quot;sed -i &#39;11,$d&#39; %s&quot; % file_abs_path)
os.system(&quot;sed -i &#39;s/categories: webshell/categories: %s/g&#39; %s&quot; % (categories,file_abs_path))
os.system(&quot;sed &#39;/ - webshell/c\\\n%s&#39; %s &amp;gt; /tmp/1&quot; % (tags_write_to_file,file_abs_path))
os.system(&quot;cat /tmp/1 &amp;gt; %s &amp;amp;&amp;amp; rm /tmp/1&quot; % file_abs_path)
os.system(&quot;vim %s&quot; % file_abs_path)

print &quot;do you want to update your remote 3xp10it.github.io&#39;s blog?&quot;
print &quot;your chioce: Y/n,default[Y]:&amp;gt;&quot;
upa=raw_input()
if(upa==&#39;n&#39; or upa==&#39;N&#39;):
    print &#39;done!bye:D&#39;
else:
    succeed=os.system(&quot;bash /usr/share/up.sh&quot;)
    if(succeed==0):
        os.system(&quot;firefox %s&quot; % &quot;https://3xp10it.github.io&quot;)
-----------------end--------------------

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x01-alias&quot;&gt;0x01 alias&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp blog.py /usr/share/
vi .zshrc
+alias bl=&quot;python /usr/share/blog.py&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-attention&quot;&gt;0x02 attention&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;内含sed用多行替换一行的代码：
os.system(&quot;sed &#39;/ - webshell/c\\\n%s&#39; %s &amp;gt; /tmp/1&quot; % (tags_write_to_file,file_abs_path))
其中tags_list为：
eg.
[&#39;webshell&#39;,&#39;tmp&#39;,&#39;ttt&#39;]

要做如下处理:
for each in tags_list:
    tags_write_to_file+=(&#39; - &#39;+each+&#39;\\\n&#39;)
tags_write_to_file=tags_write_to_file[:-2]

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 00:00:00 +0800</pubDate>
        <link>/auxilary/2016/08/02/%E4%BE%BF%E6%8D%B7%E5%86%99%E5%8D%9A%E5%AE%A2%E8%84%9A%E6%9C%AC/</link>
        <guid isPermaLink="true">/auxilary/2016/08/02/%E4%BE%BF%E6%8D%B7%E5%86%99%E5%8D%9A%E5%AE%A2%E8%84%9A%E6%9C%AC/</guid>
        
        <category>blog</category>
        
        <category>write</category>
        
        <category>jekyll</category>
        
        
        <category>auxilary</category>
        
      </item>
    
      <item>
        <title>test2</title>
        <description>&lt;p&gt;this is the 2nd test for blog.py:D&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 00:00:00 +0800</pubDate>
        <link>/auxilary/2016/08/02/test2/</link>
        <guid isPermaLink="true">/auxilary/2016/08/02/test2/</guid>
        
        <category>test</category>
        
        <category>ttt</category>
        
        <category>tmp</category>
        
        <category>wohao</category>
        
        
        <category>auxilary</category>
        
      </item>
    
      <item>
        <title>test1</title>
        <description>&lt;p&gt;this is a test for blog.py :D&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 00:00:00 +0800</pubDate>
        <link>/auxilary/2016/08/02/test1/</link>
        <guid isPermaLink="true">/auxilary/2016/08/02/test1/</guid>
        
        <category>test</category>
        
        <category>ttt</category>
        
        <category>tmp</category>
        
        <category>ddd</category>
        
        
        <category>auxilary</category>
        
      </item>
    
      <item>
        <title>自动上传截图至github并获取uri</title>
        <description>&lt;h3 id=&quot;x00-about&quot;&gt;0x00 about&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;目的:实现一个自动将截图上传至github并获取对应uri
用途:方便博客md文件中截图的处理
使用方法:
    初次运行时,在linxu系统中新建/root/githubpic目录,并将github上对应的图片目录下载到本地
    以后运行时,将需要上传的图片人工拷贝到/root/githubpic目录,运行该脚本可实现自动将新图片上传并获取uri
快捷运行:
    cp mysnippingtool.py /usr/share
    vi ~/.zshrc
    +alias jt=&quot;python /usr/share/mysnippingtool.py&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x01-code&quot;&gt;0x01 code&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setdefaultencoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;utf-8&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#必须加上上面四行,否则各种编码的错误爆出&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;all_file_name_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_all_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_file_name_list&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;allfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;each_abspath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;folder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;get_all_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#print each_abspath&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_abspath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#print filename&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;all_file_name_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;c&quot;&gt;#print each&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;all_file_name_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_file_name_list&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/root/githubpic&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;this is the first time you use me,or you have deleted /root/githubpic,I will mkdir /root/githubpic and git pull the github&#39;s pic.git,please put pngs to /root/githubpic when needed,and don&#39;t delet any png file in this folder&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mkdir /root/githubpic &amp;amp;&amp;amp; cd /root/githubpic &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git pull https://github.com/3xp10it/pic.git &amp;amp;&amp;amp; git remote add origin https://github.com/3xp10it/pic.git &amp;amp;&amp;amp; git status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cd /root/githubpic &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &#39;update&#39; &amp;amp;&amp;amp; git push -u origin master&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;all_png_list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_all_file_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/root/githubpic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all_png_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;png&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/root/githubpic/address.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;a+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;each_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://raw.githubusercontent.com/3xp10it/pic/master/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each_addr&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each_addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;open /root/githubpic/address.txt wrong&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;__main__&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-attention&quot;&gt;0x02 attention&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;os.path.abspath()函数的问题

print os.path.abspath(each) is not good function,
it will get /root/桌面/spider_wooyun when I put this py script file in /root/桌面,and run:
(cd 桌面)
python mysnippingtool.py
it will get &quot;/root/桌面/spider_wooyun&quot; as a result,but the true result should be &quot;/root/githubpic/spider_wooyun&quot;
so I use:
        each_abspath=os.path.join(folder,each)
to get the current file&#39;s abspath

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://raw.githubusercontent.com/3xp10it/little_scripts/master/mysnippingtool.py&quot;&gt;&lt;small&gt;代码链接&lt;/small&gt;&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 30 Jul 2016 00:00:00 +0800</pubDate>
        <link>/jekyll/2016/07/30/%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%88%AA%E5%9B%BE%E8%87%B3github/</link>
        <guid isPermaLink="true">/jekyll/2016/07/30/%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E6%88%AA%E5%9B%BE%E8%87%B3github/</guid>
        
        <category>github</category>
        
        <category>python</category>
        
        <category>文件遍历</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>修正博客更新脚本</title>
        <description>&lt;h3 id=&quot;x00-about&quot;&gt;0x00 about&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;目的:简化所有更新操作并实现换电脑快速还原github上博客至本地

本文针对&quot;Use github and jekyll start github pages&quot;文中的更新脚本作最终修改,原文链接如下
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://3xp10it.github.io/jekyll/2016/04/09/github-jekyll-blog/&quot;&gt;原文链接&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;x01-&quot;&gt;0x01 更新最终博客更新脚本指令如下&lt;/h3&gt;

&lt;h4 id=&quot;abash-a-hrefhttpsrawgithubusercontentcom3xp10itlittlescriptsmasterupshsmallfont-colorgreenupshfontsmalla&quot;&gt;a&amp;gt;bash脚本 &lt;a href=&quot;https://raw.githubusercontent.com/3xp10it/little_scripts/master/up.sh&quot;&gt;&lt;small&gt;&lt;font color=&quot;green&quot;&gt;up.sh&lt;/font&gt;&lt;/small&gt;&lt;/a&gt;&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -d /root/myblog &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -d /root/3xp10it.github.io &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/myblog &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; pkill jekyll;sleep 3 &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp index.html tmp.html &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp index_bak.html index.html &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sh -c &lt;span class=&quot;s2&quot;&gt;&quot;rm -r _site/ &amp;amp; jekyll serve --watch &amp;amp; sleep 3 &amp;amp;&amp;amp; exit&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp _site/index.html index2.html &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp tmp.html index.html &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;congratulations! commands execute ok to here!
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/3xp10it.github.io &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp -r ../myblog/_site/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp ../myblog/index2.html . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cp ../myblog/index.html . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -a -m &lt;span class=&quot;s2&quot;&gt;&quot;update&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push -u origin master &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;congratulations! commands execute ok to here!
    &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/myblog &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git add . &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git status &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git commit -a -m &lt;span class=&quot;s2&quot;&gt;&quot;update backup&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push -u origin master &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;all is well,and all is &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;!
&lt;span class=&quot;k&quot;&gt;else
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;this is the first time you use me,I will download myblog from https://github.com/3xp10it/myblog.git&quot;&lt;/span&gt;
    mkdir /root/myblog &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/myblog &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git init &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull https://github.com/3xp10it/myblog.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git remote add origin https://github.com/3xp10it/myblog.git
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;this is the first time you use me,I will download 3xp10it.github.io from https://github.com/3xp10it/3xp10it.github.io.git&quot;&lt;/span&gt;
    mkdir /root/3xp10it.github.io &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root/3xp10it.github.io &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git init &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git pull https://github.com/3xp10it/3xp10it.github.io.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git remote add origin https://github.com/3xp10it/3xp10it.github.io.git
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;bpython-a-hrefhttpsrawgithubusercontentcom3xp10itlittlescriptsmasteruppysmallfont-colorgreenuppyfontsmalla&quot;&gt;b&amp;gt;python脚本 &lt;a href=&quot;https://raw.githubusercontent.com/3xp10it/little_scripts/master/up.py&quot;&gt;&lt;small&gt;&lt;font color=&quot;green&quot;&gt;up.py&lt;/font&gt;&lt;/small&gt;&lt;/a&gt;&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/root/myblog&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/root/3xp10it.github.io&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;this is the first time you use me,I will download myblog from https://github.com/3xp10it/myblog.git&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mkdir /root/myblog &amp;amp;&amp;amp; cd /root/myblog &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git pull https://github.com/3xp10it/myblog.git &amp;amp;&amp;amp; git remote add origin https://github.com/3xp10it/myblog.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;this is the first time you use me,I will download 3xp10it.github.io from https://github.com/3xp10it/3xp10it.github.io.git&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mkdir /root/3xp10it.github.io &amp;amp;&amp;amp; cd /root/3xp10it.github.io &amp;amp;&amp;amp; git init &amp;amp;&amp;amp; git pull https://github.com/3xp10it/3xp10it.github.io.git &amp;amp;&amp;amp; git remote add origin https://github.com/3xp10it/3xp10it.github.io.git&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&#39;&#39;cd /root/myblog &amp;amp;&amp;amp; pkill jekyll;sleep 3 &amp;amp;&amp;amp; cp index.html tmp.html &amp;amp;&amp;amp; cp index_bak.html index.html &amp;amp;&amp;amp; sh -c &quot;rm -r _site/ &amp;amp; jekyll serve --watch &amp;amp; sleep 3 &amp;amp;&amp;amp; exit&quot; &amp;amp;&amp;amp; cp _site/index.html index2.html &amp;amp;&amp;amp; cp tmp.html index.html &amp;amp;&amp;amp; echo congratulations! commands execute ok to here!&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&#39;&#39;cd /root/3xp10it.github.io &amp;amp;&amp;amp; cp -r ../myblog/_site/* . &amp;amp;&amp;amp; cp ../myblog/index2.html . &amp;amp;&amp;amp; cp ../myblog/index.html . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &quot;update&quot; &amp;amp;&amp;amp; git push -u origin master &amp;amp;&amp;amp; echo congratulations! commands execute ok to here!&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;&#39;&#39;cd /root/myblog &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &quot;update backup&quot; &amp;amp;&amp;amp; git push -u origin master &amp;amp;&amp;amp; echo all is well,and all is done!&#39;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;x02-attention&quot;&gt;0x02 attention&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1&amp;gt;关键指令改变
这里的远程博客更新指令串较原来的updateall.sh有改变
cd /root/3xp10it.github.io &amp;amp;&amp;amp; cp -r ../myblog/_site/* . &amp;amp;&amp;amp; cp ../myblog/index2.html . &amp;amp;&amp;amp; cp ../myblog/index.html . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &quot;update&quot; &amp;amp;&amp;amp; git push -u origin master &amp;amp;&amp;amp; echo congratulations! commands execute ok to here!

原来的updateall.sh中对应代码是:
cd /root/3xp10it.github.io &amp;amp;&amp;amp; cp -r ../myblog/_site/* . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git add . &amp;amp;&amp;amp; git status &amp;amp;&amp;amp; git commit -a -m &quot;update&quot; &amp;amp;&amp;amp; git push -u origin master &amp;amp;&amp;amp; echo congratulations! commands execute ok to here!
其中的&quot;cp -r ../myblog/_site/* .&quot;有问题,因为/root/myblog/_site目录下面对应的index.html为本地jekyll --serve生成的正常的主页,而我需要将最终的主页内嵌这个正常的主页和播放音乐页面,所以需要在执行完cp -r ../myblog/_site/* .后再多两条命令:

cp ../myblog/index2.html .
cp ../myblog/index.html .

这两条语句可以达到效果是因为:

对应的上一个本地更新命令串:
cd /root/myblog &amp;amp;&amp;amp; pkill jekyll;sleep 3 &amp;amp;&amp;amp; cp index.html tmp.html &amp;amp;&amp;amp; cp index_bak.html index.html &amp;amp;&amp;amp; sh -c &quot;rm -r _site/ &amp;amp; jekyll serve --watch &amp;amp; sleep 3 &amp;amp;&amp;amp; exit&quot; &amp;amp;&amp;amp; cp _site/index.html index2.html &amp;amp;&amp;amp; cp tmp.html index.html &amp;amp;&amp;amp; echo congratulations! commands execute ok to here!
中已经将index.html变成最终内嵌两个html页面的需要的页面,且已经将index2.html变成正常情况下生成的页面,也即执行完本地更新命令串后,/root/myblog下的index.html和index2.html正是所需要拷贝到本地/root/3xp10it.github.io目录的两个文件


2&amp;gt;本地远程博客对应关系
本地/root/myblog对应github远程的myblog,本地的127.0.0.1:4000对应的是本地/root/myblog目录由本地执行jekyll --serve产生的网页效果
本地/root/3xp10it.github.io对应github远程的3xp10it.github.io,http://3xp10it.github.io对应的是github远程3xp10it.github.io由github服务器jekyll --serve产生的网页效果


3&amp;gt;快捷方式
vi ~/.bashrc
+alias upa=&quot;python /usr/share/up.py&quot;
vi ~/.zshrc
+alias upa=&quot;sh /usr/shrae/up.sh&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 30 Jul 2016 00:00:00 +0800</pubDate>
        <link>/jekyll/2016/07/30/update-blog-update-script/</link>
        <guid isPermaLink="true">/jekyll/2016/07/30/update-blog-update-script/</guid>
        
        <category>jekyll</category>
        
        <category>github</category>
        
        <category>shell</category>
        
        
        <category>jekyll</category>
        
      </item>
    
      <item>
        <title>隐藏webshell的几条建议</title>
        <description>&lt;p&gt;knowledge from klion&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;关于如何更好的隐藏webshell的几点建议:

1,尽量藏在那些程序员和管理员都不会经常光顾的目录中
比如:第三方工具的一些插件目录,主题目录,编辑器的图片目录以及一些临时目录

2,目录层级越深越好,平时网站不出问题的话,一般四五级目录很少会被注意到

3,webshell的名字千万不要太扎眼,比如:hack.php,sb.php,x.php这样的名字严禁出现……,在给webshell起名的时候尽量跟当前目录的,其他文件的名字相似度高一点,这样相对容易混淆视听,比如:目录中有个叫new.php的文件,那你就起个news.php

4,webshell里面尽量不要用类似eval这种过于敏感的特征,因为awk一句话就能查出来,除了eval,还有,比如:exec,system,passthru,shell_exec,assert这些函数都最好不要用,你可以尝试写个自定义函数,不仅能在一定程度上延长webshell的存活时间也加大了管理员的查找难度,也可以躲避一些功能比较简陋waf查杀,此外,我们也可以使用一些类似:call_user_func,call_user_func_array,诸如此类的回调函数特性来构造我们的webshell,即伪造正常的函数调用

5,靠谱的方法就是直接把一句话插到正常的网站脚本文件里面,当然最好是在一个不起眼的地方,比如:函数库文件,配置文件里面等等,以及那些不需要经常改动的文件……

6,再或者拿到权限以后,把网站日志中的所有关于webshell的访问记录和渗透时造成的一些网站报错记录全部删除

7,尝试利用静态文件隐藏一句话,然后用.htaccess 规则进行解析

8,把webshell的属性时间改为和同目录文件相同的时间戳,比如linux中的touch就是非常好的工具

9,当然,如果在拿到服务器权限以后,也可以自己写个脚本每隔一段时间检测下自己的webshell是否还存在,不存在就创建

10,利用php.ini 配置文件隐藏webshell,把webshell的路径加入到配置文件中

11,如果是大马的话,尽量把里面的一些注释和作者信息全部都去掉,比如intitle字段中的版本信息等等,用任何大马之前最好先好好的读几遍代码,把里面的shell箱子地址全部去掉推荐用开源的大马,然后自己拿过来仔细修改,记住,我们的webshell尽量不要用加密,因为加密并不能很好的解决waf问题,还有,大马中一般都会有个pass或者password字符,建议把这些敏感字段全部换成别的,因为利用这样的字符基本一句话就能定位到

12,养成一个好习惯,为了防止权限很快丢失,最好再同时上传几个备用webshell,注意,每个webshell的路径和名字千万不要都一样更不要在同一个目录下,多跳几层,记住,确定shell正常访问就可以了,不用再去尝试访问看看解析是否正常,因为这样就会在日志中留下记录,容易被查到

13,在有权限的情况,看看管理员是否写的有动态webshell监测脚本,务必把脚本找出来,crontab一般都能看见了

14,上传个精心构造的图片马,然后再到另一个不起眼的正常的网站脚本文件中去包含这个图片马

15,如果有可能的话,还是审计下目标的代码,然后想办法在正常的代码中构造执行我们自己的webshell,即在原生代码中执行webshell

16,我这里只是根据个人经验总结了一些比较常用的,当然,肯定还有更多更好更高级的关于webshell的隐藏方法,欢迎大家一起交流,待续……
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Thu, 28 Jul 2016 00:00:00 +0800</pubDate>
        <link>/webshell/2016/07/28/%E9%9A%90%E8%97%8Fwebshell/</link>
        <guid isPermaLink="true">/webshell/2016/07/28/%E9%9A%90%E8%97%8Fwebshell/</guid>
        
        <category>webshell</category>
        
        
        <category>webshell</category>
        
      </item>
    
  </channel>
</rss>
